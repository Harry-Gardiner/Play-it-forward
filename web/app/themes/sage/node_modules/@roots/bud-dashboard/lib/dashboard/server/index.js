import figures from '@roots/bud-support/figures';
import Ink from '@roots/bud-support/ink';
import Link from '@roots/bud-support/ink-link';
import React from '@roots/bud-support/react';
import { color } from '../format.js';
import getProxy from './getProxy.js';
import getServer from './getServer.js';
import useWatchedFilesCount from './useWatchedFilesCount.js';
/**
 * Server info ink component
 */
export const Server = ({ devUrl, displayServerInfo, watchFiles = new Set(), proxyUrl, }) => {
    const server = getServer(devUrl);
    const proxy = getProxy(proxyUrl);
    const watchedFilesCount = useWatchedFilesCount(watchFiles);
    return (React.createElement(Ink.Box, { flexDirection: "column" },
        React.createElement(Ink.Box, { flexDirection: "row" },
            React.createElement(Ink.Text, { color: color.cyan, dimColor: !displayServerInfo },
                figures.info,
                " ",
                React.createElement(Ink.Text, { underline: true }, "s"),
                "erver")),
        displayServerInfo ? (React.createElement(React.Fragment, null,
            React.createElement(Ink.Text, { dimColor: true }, figures.lineVerticalDashed7),
            proxy && React.createElement(Value, { label: "proxy", value: proxy }),
            server ? (React.createElement(React.Fragment, null,
                React.createElement(Value, { label: "internal", value: server.internal }),
                React.createElement(Value, { label: "external", last: true, value: server.external }))) : null,
            React.createElement(Ink.Box, { marginTop: 1, minWidth: "100%", flexDirection: "row", justifyContent: "space-between" },
                React.createElement(Ink.Text, null,
                    figures.ellipsis,
                    " watching project sources",
                    watchedFilesCount > 0 && (React.createElement(Ink.Text, { dimColor: true },
                        ` `,
                        "(and ",
                        watchedFilesCount,
                        " other",
                        ` `,
                        watchedFilesCount > 1 ? `files` : `file`,
                        ")",
                        ` `))),
                React.createElement(Ink.Text, null,
                    figures.info,
                    " ",
                    React.createElement(Ink.Text, { dimColor: true }, "ctrl+c to exit"))))) : null));
};
const Value = ({ label, value, last, }) => (React.createElement(Ink.Box, { flexDirection: "row" },
    React.createElement(Ink.Box, { marginRight: 1 },
        React.createElement(Ink.Text, { dimColor: true },
            last ? `└─` : `├─`,
            " ",
            label,
            ":")),
    React.createElement(Ink.Box, null,
        React.createElement(Link, { url: value },
            React.createElement(Ink.Text, null, value)))));
//# sourceMappingURL=index.js.map