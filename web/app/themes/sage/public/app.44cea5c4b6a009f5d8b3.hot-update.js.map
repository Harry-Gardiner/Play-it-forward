{"version":3,"file":"app.44cea5c4b6a009f5d8b3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpJA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA","sources":["webpack://@roots/bud/sage/sage/./scripts/app.js","webpack://@roots/bud/sage/sage/./scripts/custom/Header.js","webpack://@roots/bud/sage/sage/./scripts/custom/Slider.js"],"sourcesContent":["import domReady from '@roots/sage/client/dom-ready';\nimport './custom/Header.js';\nimport './custom/Slider.js';\nimport './custom/StatsCounter.js';\nimport './custom/Footer.js';\nimport './custom/Beacon.js';\nimport './custom/TeamTab.js';\nimport InfoBannerCookies from './custom/Banner.js';\n\n/**\n * Application entrypoint\n */\ndomReady(async () => {\n  /**\n   * Load more posts\n   */\n  const loadMoreButton = document.getElementById('load-more');\n  const cardsWrapper = document.querySelector('.cards-wrapper');\n  const spinner = document.querySelector('.spinner');\n  let currentPage = 1;\n  let isLoading = false;\n  if (loadMoreButton) {\n    loadMoreButton.addEventListener('click', async (e) => {\n      const num = e.target.getAttribute('data-num');\n\n      // Increment the current page\n      currentPage++;\n\n      // Check if a request is already in progress\n      if (isLoading) {\n        return;\n      }\n\n      // Set the isLoading flag to true\n      isLoading = true;\n\n      // Show the spinner after 0.5 seconds\n      const spinnerTimeout = setTimeout(() => {\n        spinner.style.display = 'flex';\n      }, 500);\n\n      const response = await fetch(\n        `/wp-json/v1/posts/load_more?page=${currentPage}&per_page=${num}`\n      );\n      const newPosts = await response.json();\n      // Check if there are new posts\n      if (newPosts.length > 0) {\n        // Convert the posts to HTML\n        const postsHtml = newPosts\n          .map(\n            (post) =>\n              `<div class=\"card new-card\" style=\"opacity: 0\">${post}</div>`\n          )\n          .join('');\n        // Render the new cards\n        cardsWrapper.insertAdjacentHTML('beforeend', postsHtml);\n\n        // Fade in the new cards in order\n        const newCards = cardsWrapper.querySelectorAll('.new-card');\n        newCards.forEach((card, index) => {\n          setTimeout(() => {\n            card.style.opacity = 1;\n            card.style.transition = 'opacity 0.5s ease-in-out';\n            setTimeout(() => {\n              card.classList.remove('new-card');\n            }, 500);\n          }, index * 100);\n        });\n      }\n\n      // Hide the spinner\n      clearTimeout(spinnerTimeout);\n      spinner.style.display = 'none';\n\n      // Set the isLoading flag to false\n      isLoading = false;\n\n      if (newPosts.length < num) {\n        loadMoreButton.remove();\n      }\n    });\n  }\n\n  /**\n   * Load more matches\n   */\n\n  const loadMoreMatchesButton = document.getElementById('loadMoreMatches');\n  const matchResults = Array.from(\n    document.querySelectorAll('.football-team__matches__result')\n  );\n  if (loadMoreMatchesButton) {\n    loadMoreMatchesButton.addEventListener('click', function () {\n      const hiddenMatches = matchResults.filter(function (result) {\n        return result.style.display === 'none';\n      });\n\n      hiddenMatches.slice(0, 3).forEach(function (match) {\n        match.style.display = 'flex';\n        match.classList.add('loaded');\n      });\n\n      // Fade in the new cards in order\n      const moreMatches = document.querySelectorAll('.loaded');\n      moreMatches.forEach((card, index) => {\n        setTimeout(() => {\n          card.style.opacity = 1;\n          card.style.transition = 'opacity 0.5s ease-in-out';\n          setTimeout(() => {\n            card.classList.remove('new-card');\n          }, 500);\n        }, index * 100);\n      });\n\n      if (hiddenMatches.length <= 3) {\n        loadMoreMatchesButton.style.display = 'none';\n      }\n    });\n  }\n\n\n  /**\n   * Info Banner Cookies\n   */\n  const infoBannerElement = document.querySelector('.info-banner');\n\n  if (infoBannerElement) {\n    new InfoBannerCookies(infoBannerElement);\n  }\n});\n\n/**\n * @see {@link https://webpack.js.org/api/hot-module-replacement/}\n */\nimport.meta.webpackHot?.accept(console.error);\n","/*\n* Nav menu\n* Handles the header navigation drop down and hamburger menu\n*/\nlet menuItems = document.querySelectorAll('li.menu-item-has-children');\nconst heroImage = document.querySelector('.hero-fp__image');\nconst heroNav = document.querySelector('.header__wrapper__nav');\nconst headerNavInner = document.querySelector('.header__wrapper__nav__inner');\nconst header = document.querySelector('.header');\nconst hamb = document.querySelector('.hamb');\nconst dropdown = document.querySelector('.nav');\nlet subMenuItems = Array.from(\n  dropdown.querySelectorAll('li.menu-item-has-children')\n);\n\nhamb.addEventListener('click', function (e) {\n  e.preventDefault();\n  if (dropdown) {\n    dropdown.classList.toggle('drop-open');\n    this.classList.toggle('hamb-open');\n  }\n});\n\nlet isScrolled = false;\n\nwindow.addEventListener('scroll', function() {\n  if (window.scrollY > 0 && !isScrolled) {\n    header.classList.add('js-menu-scrolled');\n    isScrolled = true;\n  } else if (window.scrollY === 0 && isScrolled) {\n    header.classList.remove('js-menu-scrolled');\n    isScrolled = false;\n  }\n});\n\n\nwindow.addEventListener('click', function (event) {\n  if (!dropdown.contains(event.target) && !hamb.contains(event.target)) {\n    hamb.classList.remove('hamb-open')\n    dropdown.classList.remove('drop-open');\n  }\n\n  subMenuItems.forEach(function (menu) {\n    if (!menu.contains(event.target)) {\n      menu.classList.remove('open');\n      menu.querySelector('button').setAttribute('aria-expanded', 'false');\n      menu.querySelector('a').setAttribute('aria-expanded', 'false');\n    }\n  });\n})\n\nArray.prototype.forEach.call(menuItems, function (el) {\n  let activatingA = el.querySelector('a');\n\n  function menuToggle(event) {\n    if (!this.parentNode.classList.contains('open')) {\n      let elems = document.querySelectorAll('.open');\n      [].forEach.call(elems, function (el) {\n        el.classList.remove('open');\n        el.querySelector('button').setAttribute('aria-expanded', 'false');\n        el.querySelector('a').setAttribute('aria-expanded', 'false');\n      });\n\n      this.parentNode.classList.add('open');\n      this.parentNode.querySelector('a').setAttribute('aria-expanded', 'true');\n      this.parentNode\n        .querySelector('button')\n        .setAttribute('aria-expanded', 'true');\n\n      let subMenuItems = Array.from(\n        this.nextElementSibling.querySelectorAll('.menu-item')\n      );\n      subMenuItems.forEach((item) => {\n        item.firstChild.setAttribute('tabindex', 0);\n      });\n    } else {\n      this.parentNode.classList.remove('open');\n      this.parentNode.querySelector('a').setAttribute('aria-expanded', 'false');\n      this.parentNode\n        .querySelector('button')\n        .setAttribute('aria-expanded', 'false');\n    }\n    event.preventDefault();\n  }\n\n  let btn =\n    '<button class=\"sub-menu-btn\" aria-haspopup=\"true\" aria-expanded=\"false\" tabindex=\"0\"><span class=\"caret\"></span><span class=\"visually-hidden\">show submenu for ' +\n    activatingA.text +\n    '</span></button>';\n\n  activatingA.insertAdjacentHTML('afterend', btn);\n\n  el.querySelector('button').addEventListener('click', menuToggle);\n});\n\n\n/*\n* Front page hero nav\n* Handle the front page hero nav width and style\n*/\nfunction adjustHeroNavWidth() {\n  if (document.body.classList.contains('home') && window.matchMedia('(min-width: 992px)').matches && document.querySelector('.hero-fp__image')) {\n    if ((headerNavInner.offsetWidth + 33) <= heroImage.offsetWidth) {\n      heroNav.style.width = heroImage.offsetWidth + 'px';\n      header.classList.remove('default');\n    } else {\n      header.classList.add('default');\n    }\n  } else {\n    header.classList.add('default');\n  }\n\n  if (window.matchMedia('(max-width: 992px)').matches) {\n    heroNav.style.width = 'auto';\n  }\n}\n\n// Call the function on page load\ndocument.addEventListener('DOMContentLoaded', adjustHeroNavWidth);\n\n// Call the function on window resize\nwindow.addEventListener('resize', adjustHeroNavWidth);\n\n// Call the function on orientation change\nwindow.addEventListener('orientationchange', adjustHeroNavWidth);\n\n// Front page hero nav scroll variation\nfunction debounce(func, wait) {\n  let timeout;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\nwindow.addEventListener('scroll', debounce(function () {\n  let scrollY = window.scrollY;\n  if (document.body.classList.contains('home') && window.matchMedia('(min-width: 992px)').matches && !header.classList.contains('default')) {\n    if (scrollY >= 60) {\n      header.classList.add('scrolled');\n    } else {\n      header.classList.remove('scrolled');\n    }\n  }\n}, 10));","import EmblaCarousel from 'embla-carousel'\nimport Autoplay from 'embla-carousel-autoplay'\n\nconst emblaNode = document.querySelector('.embla')\nconst options = { loop: true }\nif (emblaNode) {\n    const emblaApi = EmblaCarousel(emblaNode, options, [Autoplay()])\n}\n\n"],"names":[],"sourceRoot":""}